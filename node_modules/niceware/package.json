{
  "_from": "niceware",
  "_id": "niceware@2.0.0",
  "_inBundle": false,
  "_integrity": "sha512-BqxFABePNqGTJ/dk8W2C/qWixKuu5/xWYY0yPLCCgdIu6CYKXBh0NoUaYO+344WQTB9rffMMUEgcYl5KNCwuSw==",
  "_location": "/niceware",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "niceware",
    "fetchSpec": "latest",
    "name": "niceware",
    "raw": "niceware",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/niceware/-/niceware-2.0.0.tgz",
  "_shasum": "071441e59cc1acc028b282e403347eb26ebb2a68",
  "_shrinkwrap": null,
  "_spec": "niceware",
  "_where": "/Users/ferenczybalint/Documents/BME/3.év/2. félév/node.js/Express gyakorlat",
  "author": {
    "email": "yan@mit.edu",
    "name": "yan"
  },
  "bugs": {
    "url": "https://github.com/diracdeltas/niceware/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "binary-search": "^1.3.3",
    "randombytes": "^2.0.6"
  },
  "deprecated": false,
  "description": "Utility for generating memorable passwords and converting random bytes into human-readable phrases",
  "devDependencies": {
    "browserify": "^16.2.3",
    "coveralls": "^3.0.0",
    "flow-bin": "^0.35.0",
    "istanbul": "^0.4.5",
    "jsdoc-to-markdown": "^5.0.0",
    "standard": "^11.0.1",
    "tape": "^4.9.0"
  },
  "homepage": "http://www.github.com/diracdeltas/niceware",
  "keywords": [
    "crypto",
    "cryptography",
    "diceware",
    "dictionary",
    "encryption",
    "entropy",
    "generator",
    "passphrase",
    "password",
    "password generator",
    "random"
  ],
  "license": "MIT",
  "main": "lib/main.js",
  "name": "niceware",
  "optionalDependencies": {},
  "readme": "# niceware\n\n[![Build Status](https://travis-ci.org/diracdeltas/niceware.svg?branch=master)](https://travis-ci.org/diracdeltas/niceware)\n\nA JS library for generating random-yet-memorable passwords, either server-side in Node or in the browser. Each word provides 16 bits of entropy, so a useful password requires at least 3 words.\n\nBecause the wordlist is of exactly size 2^16, Niceware is also useful for convert cryptographic keys and other sequences of random bytes into human-readable phrases. With Niceware, a 128-bit key is equivalent to an 8-word phrase.\n\nDemo: https://diracdeltas.github.io/niceware/\n\n**WARNING: The wordlist has not been rigorously checked for offensive words.\nUse at your own risk.**\n\n## Sample use cases\n\n* Niceware can be used to generate secure, semi-memorable, easy-to-type\n  passphrases. A random 3-5 word phrase in Niceware is equivalent to a strong\n  password for authentication to most online services. For instance,\n  `+8svofk0Y1o=` and `bacca cavort west volley` are equally strong (64 bits of\n  randomness).\n* Niceware can be used to display cryptographic key material in a way that\n  users can easily backup or copy between devices. For instance, the 128-bit\n  random seed used to generate a 256-bit ECC key (~equivalent to\n  a 3072-bit RSA key) is only 8 Niceware words. With this 8-word phrase, you\n  can reconstruct the entire public/private keypair.\n\n## Usage in Node\n\nTo install:\n\n```\nnpm install niceware\n```\n\nTo generate an 8-byte passphrase:\n\n```\nconst niceware = require('niceware')\n\n// The number of bytes must be even\nconst passphrase = niceware.generatePassphrase(8)\n\n// Result: [ 'deathtrap', 'stegosaur', 'nilled', 'nonscheduled' ]\n```\n\n## Usage in browser\n\nTo use Niceware in modern browsers, include\n[browser/niceware.js](browser/niceware.js) in a script\ntag. Niceware is then available in the `window.niceware` object.\n\n```\n<script src='niceware.js'></script>\n<script>\n  const passphrase = window.niceware.generatePassphrase(8)\n</script>\n```\n\nNiceware uses `window.{crypto, msCrypto}.getRandomValues` for entropy in the browser.\n\n## Docs\n\nNOTE: When used in the browser, `Buffer` is replaced with `window.Uint8Array`.\n\n* [niceware](#exp_module_niceware--niceware) ⏏\n    * [.bytesToPassphrase(bytes)](#module_niceware--niceware.bytesToPassphrase) ⇒ <code>Array.&lt;string&gt;</code>\n    * [.passphraseToBytes(words)](#module_niceware--niceware.passphraseToBytes) ⇒ <code>Buffer</code>\n    * [.generatePassphrase(size)](#module_niceware--niceware.generatePassphrase) ⇒ <code>Array.&lt;string&gt;</code>\n\n<a name=\"exp_module_niceware--niceware\"></a>\n\n### niceware ⏏\n**Kind**: Exported constant  \n<a name=\"module_niceware--niceware.bytesToPassphrase\"></a>\n\n#### niceware.bytesToPassphrase(bytes) ⇒ <code>Array.&lt;string&gt;</code>\nConverts a byte array into a passphrase.\n\n**Kind**: static method of [<code>niceware</code>](#exp_module_niceware--niceware)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| bytes | <code>Buffer</code> | The bytes to convert |\n\n<a name=\"module_niceware--niceware.passphraseToBytes\"></a>\n\n#### niceware.passphraseToBytes(words) ⇒ <code>Buffer</code>\nConverts a phrase back into the original byte array.\n\n**Kind**: static method of [<code>niceware</code>](#exp_module_niceware--niceware)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| words | <code>Array.&lt;string&gt;</code> | The words to convert |\n\n<a name=\"module_niceware--niceware.generatePassphrase\"></a>\n\n#### niceware.generatePassphrase(size) ⇒ <code>Array.&lt;string&gt;</code>\nGenerates a random passphrase with the specified number of bytes.\nNOTE: `size` must be an even number.\n\n**Kind**: static method of [<code>niceware</code>](#exp_module_niceware--niceware)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| size | <code>number</code> | The number of random bytes to use |\n\n\n## Niceware ports\n\n* Chrome extension, thanks to Noah Feder: https://chrome.google.com/webstore/detail/niceware-password/dhnichgmciickpnnnhfcljljnfomadag\n* pip package, thanks to Alex Willmer: https://pypi.python.org/pypi/niceware\n* CLI, thanks to Alex Cross: https://www.npmjs.com/package/nicepass\n\n## Credits\n\nNiceware was inspired by\n[Diceware](http://world.std.com/~reinhold/diceware.html). Its wordlist is\nderived from http://www-01.sil.org/linguistics/wordlists/english/. This project\nis based on my work on OpenPGP key backup for the Yahoo\n[End-to-End](https://github.com/yahoo/end-to-end) project.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/diracdeltas/niceware.git"
  },
  "scripts": {
    "browsertest": "browserify test/*.js > testbundle.js && python -m SimpleHTTPServer",
    "build": "browserify lib/main.js -o browser/niceware.js",
    "check": "npm audit",
    "coverage": "istanbul cover tape test/**/*.js --report lcovonly -- -R spec",
    "flow": "flow; test $? -eq 0 -o $? -eq 2",
    "jsdoc": "jsdoc2md lib/main.js > docs/api.md",
    "lint": "standard",
    "test": "tape test/**/*.js"
  },
  "standard": {
    "ignore": [
      "browser/niceware.js",
      "lib/wordlist.js"
    ]
  },
  "version": "2.0.0"
}
